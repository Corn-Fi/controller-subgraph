# type Controller @entity {
#   # id = Controller address
#   id: ID!
#   owner: Bytes!
#   strategies: [Strategy!] @derivedfrom(field: "controller")
# }

# type Order @entity {
#   # id = strategy ID "-" order ID
#   id: ID!

#   orderId: BigInt!

#   trade: Trade!
  
#   fromToken: Bytes!
#   toToken: Bytes!
#   amountIn: BigInt!
#   desiredAmountOut: BigInt!
#   amountOut: BigInt!
#   expiration: BigInt!

#   open: Boolean!
#   timestamp: BigInt!

#   owner: Bytes!
#   strategy: Strategy!
#   strategyToken: StrategyToken!
# }

# type Trade @entity {
#   #id = strategy ID "-" token ID "-" trade ID
#   id: ID!

#   tradeId: BigInt!
#   token: StrategyToken!
#   orders: [Order!] @derivedfrom(field: "trade")
# }

# type StrategyToken @entity {
#   # id = strategy ID "-" token ID
#   id: ID!

#   tokenId: BigInt!
#   strategy: Strategy!
#   owner: Bytes!
#   trades: [Trade!] @derivedfrom(field: "token")
#   erc20: [ERC20!] @derivedfrom(field: "strategyToken")
# }

# type Strategy @entity {
#   # id = strategy ID
#   id: ID!

#   address: Bytes!
#   name: String!
#   controller: Controller!
#   tokenCount: BigInt!
# }






type User @entity {
  # id = User address
  id: ID!

  controller: Controller!
  strategyTokens: [StrategyToken!]
}

type ERC20 @entity {
  # id = ERC20 address "-" strategy ID "-" token ID
  id: ID!

  strategyToken: StrategyToken!
  owner: Bytes!
  address: Bytes!
  amount: BigInt!
}




type StrategyToken @entity {
  # id = strategy ID "-" token ID
  id: ID!

  strategyId: BigInt!
  tokenId: BigInt!
  owner: Bytes!
  trades: [Trade!]!
  erc20: [ERC20!]!
}

type Trade @entity {
  #id = strategy ID "-" token ID "-" trade ID
  id: ID!

  tradeId: BigInt!
  token: StrategyToken!
  orders: [Order!]!
}

type Order @entity {
  # id = strategy ID "-" order ID
  id: ID!

  orderId: BigInt!

  # trade: Trade!
  
  fromToken: Bytes!
  toToken: Bytes!
  amountIn: BigInt!
  desiredAmountOut: BigInt!
  amountOut: BigInt!
  expiration: BigInt!

  open: Boolean!
  timestamp: BigInt!

  # owner: Bytes!
  # strategy: Strategy!
  # strategyToken: StrategyToken!
}