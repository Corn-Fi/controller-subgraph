type User @entity {
  # id = User address
  id: ID!

  strategyTokens: [StrategyToken!]
}

type ERC20 @entity {
  # id = ERC20 address "-" strategy ID "-" token ID
  id: ID!

  address: Bytes!
  strategyToken: StrategyToken!
  owner: Bytes!
  erc20Meta: ERC20Meta!
  amount: BigDecimal!
}

type StrategyToken @entity {
  # id = strategy ID "-" token ID
  id: ID!

  strategyId: BigInt!
  tokenId: BigInt!
  owner: Bytes!
  trades: [Trade!]
  erc20: [ERC20!]
  open: Boolean!
  timestamp: BigInt!
  txHash: Bytes!
}

type Trade @entity {
  #id = strategy ID "-" token ID "-" trade ID
  id: ID!

  tradeId: BigInt!
  token: StrategyToken!
  orders: [Order!]
  timestamp: BigInt!
}

type Order @entity {
  # id = strategy ID "-" order ID
  id: ID!

  orderId: BigInt!  
  fromToken: Bytes!
  toToken: Bytes!
  amountIn: BigDecimal!
  desiredAmountOut: BigDecimal!
  amountOut: BigDecimal!
  expiration: BigInt!
  open: Boolean!
  timestamp: BigInt!
  strategyToken: StrategyToken!
  txHash: Bytes!
  creationTime: BigInt!
}



type ERC20Meta @entity {
  # token address
  id: ID!

  priceUSD: BigDecimal!
  decimals: BigInt!
  name: String!
  symbol: String!
  totalBalance: BigDecimal!
  totalValueUSD: BigDecimal!
}

type Controller @entity {
  id: ID!

  strategyCount: BigInt!
  userCount: BigInt!
  erc20: [ERC20Meta!]
  totalOrderCount: BigInt!
  openOrderCount: BigInt!
  filledOrderCount: BigInt!
  totalValueUSD: BigDecimal!
  totalVolumeDepositedUSD: BigDecimal!
  totalVolumeFilledUSD: BigDecimal!
}